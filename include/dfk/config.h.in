/**
 * @file dfk/config.h
 * Compile-time definitions
 *
 * @copyright
 * Copyright (c) 2015-2016 Stanislav Ivochkin
 * Licensed under the MIT License:
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#define DFK_VERSION "@DFK_VERSION@"
#define DFK_VERSION_MAJOR @DFK_VERSION_MAJOR@
#define DFK_VERSION_MINOR @DFK_VERSION_MINOR@
#define DFK_VERSION_PATCH @DFK_VERSION_PATCH@

/**
 * Defined to 1 if header file "assert.h" is presented in build environment
 */
#cmakedefine01 DFK_HAVE_ASSERT_H
#cmakedefine01 DFK_HAVE_STDDEF_H
#cmakedefine01 DFK_HAVE_STDINT_H
#cmakedefine01 DFK_HAVE_STDLIB_H
#cmakedefine01 DFK_HAVE_STRING_H
#cmakedefine01 DFK_HAVE_STDIO_H
#cmakedefine01 DFK_HAVE_STDARG_H
#cmakedefine01 DFK_HAVE_SIGNAL_H
#cmakedefine01 DFK_HAVE_UNISTD_H
#cmakedefine01 DFK_HAVE_PTHREAD_H
#cmakedefine01 DFK_HAVE_SYS_SOCKET_H
#cmakedefine01 DFK_HAVE_SYS_TYPES_H
#cmakedefine01 DFK_HAVE_SYS_MMAN_H
#cmakedefine01 DFK_HAVE_NETINET_IN_H
#cmakedefine01 DFK_HAVE_ARPA_INET_H
#cmakedefine01 DFK_HAVE_UCONTEXT_H
#cmakedefine01 DFK_HAVE_SETJMP_H
#cmakedefine01 DFK_HAVE_TIME_H
#cmakedefine01 DFK_HAVE_CTYPE_H
#cmakedefine01 DFK_HAVE_SIGALTSTACK
#cmakedefine01 DFK_HAVE_NANOSLEEP
#cmakedefine01 DFK_HAVE_FFLUSH
#cmakedefine01 DFK_HAVE_MPROTECT

/** Memory page size of target platform */
#define DFK_PAGE_SIZE @DFK_PAGE_SIZE@
/** Default TCP backlog size */
#define DFK_TCP_BACKLOG @DFK_TCP_BACKLOG@
/** Coroutine implementation */
#define DFK_COROUTINE "@DFK_COROUTINE@"
/** Enable user-provided names for coroutines */
#cmakedefine01 DFK_NAMED_COROUTINES
/** Maximum size of coroutine name, including zero termination byte */
#define DFK_COROUTINE_NAME_LENGTH @DFK_COROUTINE_NAME_LENGTH@
/** Stack growth strategy */
#define DFK_STACK "@DFK_STACK@"
/** Default stack size, in bytes */
#define DFK_STACK_SIZE @DFK_STACK_SIZE@
/** Stack alignment, in bytes */
#define DFK_STACK_ALIGNMENT @DFK_STACK_ALIGNMENT@
/** Emit N guard bytes to protect against stack overflow */
#define DFK_STACK_GUARD_SIZE @DFK_STACK_GUARD_SIZE@
/** Event loop implementation */
#define DFK_EVENT_LOOP "@DFK_EVENT_LOOP@"
/** Emit debug log messages */
#cmakedefine01 DFK_DEBUG
/** Enable object mocking for unit testing */
#cmakedefine01 DFK_MOCKS
/** Enable multithreading support */
#cmakedefine01 DFK_THREADS
/** Collect gcov coverage statistics */
#cmakedefine01 DFK_COVERAGE
/** In addition to regular mode, run unit tests under valgrind */
#cmakedefine01 DFK_VALGRIND
/** Enable Thread Sanitizer */
#cmakedefine01 DFK_THREAD_SANITIZER
/** Enable Memory Sanitizer */
#cmakedefine01 DFK_MEMORY_SANITIZER
/** Buffer for HTTP headers, stack-allocated */
#define DFK_HTTP_HEADERS_BUFFER @DFK_HTTP_HEADERS_BUFFER@
/** Enable HTTP request pipelining */
#cmakedefine01 DFK_HTTP_PIPELINING
/** Ignore SIGPIPE when entering dfk loop */
#cmakedefine01 DFK_IGNORE_SIGPIPE
/** Size of arena's segment, in bytes */
#define DFK_ARENA_SEGMENT_SIZE @DFK_ARENA_SEGMENT_SIZE@
/** Size of sponge data structure initial size, in bytes. */
#define DFK_SPONGE_INITIAL_SIZE @DFK_SPONGE_INITIAL_SIZE@

