/**
 * @file dfk/config.h
 * Compile-time definitions
 *
 * @copyright
 * Copyright (c) 2015, 2016, Stanislav Ivochkin. All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#define DFK_VERSION "@DFK_VERSION@"
#define DFK_VERSION_MAJOR @DFK_VERSION_MAJOR@
#define DFK_VERSION_MINOR @DFK_VERSION_MINOR@
#define DFK_VERSION_PATCH @DFK_VERSION_PATCH@

/**
 * Defined to 1 if header file "assert.h" is presented in build environment
 */
#cmakedefine01 DFK_HAVE_ASSERT_H
#cmakedefine01 DFK_HAVE_STDDEF_H
#cmakedefine01 DFK_HAVE_STDINT_H
#cmakedefine01 DFK_HAVE_STDLIB_H
#cmakedefine01 DFK_HAVE_STRING_H
#cmakedefine01 DFK_HAVE_STDIO_H
#cmakedefine01 DFK_HAVE_STDARG_H
#cmakedefine01 DFK_HAVE_SIGNAL_H
#cmakedefine01 DFK_HAVE_UNISTD_H
#cmakedefine01 DFK_HAVE_PTHREAD_H
#cmakedefine01 DFK_HAVE_SYS_SOCKET_H
#cmakedefine01 DFK_HAVE_SYS_TYPES_H
#cmakedefine01 DFK_HAVE_NETINET_IN_H
#cmakedefine01 DFK_HAVE_ARPA_INET_H
#cmakedefine01 DFK_HAVE_UCONTEXT_H
#cmakedefine01 DFK_HAVE_SETJMP_H
#cmakedefine01 DFK_HAVE_TIME_H
#cmakedefine01 DFK_HAVE_CTYPE_H
#cmakedefine01 DFK_HAVE_SIGALTSTACK
#cmakedefine01 DFK_HAVE_NANOSLEEP
#cmakedefine01 DFK_HAVE_FFLUSH

/** Memory page size of target platform */
#define DFK_PAGE_SIZE @DFK_PAGE_SIZE@
/** Default TCP backlog size */
#define DFK_TCP_BACKLOG @DFK_TCP_BACKLOG@
/** Coroutine implementation */
#define DFK_COROUTINE "@DFK_COROUTINE@"
/** Enable user-provided names for coroutines */
#cmakedefine01 DFK_NAMED_COROUTINES
/** Maximum size of coroutine name, including zero termination byte */
#define DFK_COROUTINE_NAME_LENGTH @DFK_COROUTINE_NAME_LENGTH@
/** Stack growth strategy */
#define DFK_STACK "@DFK_STACK@"
/** Default stack size, in bytes */
#define DFK_STACK_SIZE @DFK_STACK_SIZE@
/** Stack alignment, in bytes */
#define DFK_STACK_ALIGNMENT @DFK_STACK_ALIGNMENT@
/** Event loop implementation */
#define DFK_EVENT_LOOP "@DFK_EVENT_LOOP@"
/** Emit debug log messages */
#cmakedefine01 DFK_DEBUG
/** Enable object mocking for unit testing */
#cmakedefine01 DFK_MOCKS
/** Enable multithreading support */
#cmakedefine01 DFK_THREADS
/** Collect gcov coverage statistics */
#cmakedefine01 DFK_COVERAGE
/** In addition to regular mode, run unit tests under valgrind */
#cmakedefine01 DFK_VALGRIND
/** Buffer for HTTP headers, stack-allocated */
#define DFK_HTTP_HEADERS_BUFFER @DFK_HTTP_HEADERS_BUFFER@
/** Ignore SIGPIPE when entering dfk loop */
#cmakedefine01 DFK_IGNORE_SIGPIPE
/** Size of arena's segment, in bytes */
#define DFK_ARENA_SEGMENT_SIZE @DFK_ARENA_SEGMENT_SIZE@

