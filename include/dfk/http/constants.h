/**
 * @file dfk/http/constants.h
 * Constants for HTTP methods and return codes
 *
 * @copyright
 * Copyright (c) 2016-2017 Stanislav Ivochkin
 * Licensed under the MIT License (see LICENSE)
 */

#pragma once

/**
 * @addtogroup http
 * @{
 */

#define DFK_HTTP_USER_AGENT "User-Agent"
#define DFK_HTTP_HOST "Host"
#define DFK_HTTP_ACCEPT "Accept"
#define DFK_HTTP_CONTENT_TYPE "Content-Type"
#define DFK_HTTP_CONTENT_LENGTH "Content-Length"
#define DFK_HTTP_CONNECTION "Connection"


typedef enum dfk_http_method_e {
  DFK_HTTP_DELETE = 0,
  DFK_HTTP_GET = 1,
  DFK_HTTP_HEAD = 2,
  DFK_HTTP_POST = 3,
  DFK_HTTP_PUT = 4,
  DFK_HTTP_CONNECT = 5,
  DFK_HTTP_OPTIONS = 6,
  DFK_HTTP_TRACE = 7,
  DFK_HTTP_COPY = 8,
  DFK_HTTP_LOCK = 9,
  DFK_HTTP_MKCOL = 10,
  DFK_HTTP_MOVE = 11,
  DFK_HTTP_PROPFIND = 12,
  DFK_HTTP_PROPPATCH = 13,
  DFK_HTTP_SEARCH = 14,
  DFK_HTTP_UNLOCK = 15,
  DFK_HTTP_BIND = 16,
  DFK_HTTP_REBIND = 17,
  DFK_HTTP_UNBIND = 18,
  DFK_HTTP_ACL = 19,
  DFK_HTTP_REPORT = 20,
  DFK_HTTP_MKACTIVITY = 21,
  DFK_HTTP_CHECKOUT = 22,
  DFK_HTTP_MERGE = 23,
  DFK_HTTP_MSEARCH = 24,
  DFK_HTTP_NOTIFY = 25,
  DFK_HTTP_SUBSCRIBE = 26,
  DFK_HTTP_UNSUBSCRIBE = 27,
  DFK_HTTP_PATCH = 28,
  DFK_HTTP_PURGE = 29,
  DFK_HTTP_MKCALENDAR = 30,
  DFK_HTTP_LINK = 31,
  DFK_HTTP_UNLINK = 32
} dfk_http_method_e;


typedef enum dfk_http_status_e {
  DFK_HTTP_CONTINUE = 100,
  DFK_HTTP_SWITCHING_PROTOCOLS = 101,
  DFK_HTTP_PROCESSING = 102, /* WebDAV, RFC 2518 */

  DFK_HTTP_OK = 200,
  DFK_HTTP_CREATED = 201,
  DFK_HTTP_ACCEPTED = 202,
  DFK_HTTP_NON_AUTHORITATIVE_INFORMATION = 203,
  DFK_HTTP_NO_CONTENT = 204 ,
  DFK_HTTP_RESET_CONTENT = 205,
  DFK_HTTP_PARTIAL_CONTENT = 206, /* RFC 7233 */
  DFK_HTTP_MULTI_STATUS = 207, /* WebDAV, RFC 4918 */
  DFK_HTTP_ALREADY_REPORTED = 208, /* WebDAV, RFC 5842 */
  DFK_HTTP_IM_USED = 226, /* RFC 3229 */

  DFK_HTTP_MULTIPLE_CHOICES = 300,
  DFK_HTTP_MOVED_PERMANENTLY = 301,
  DFK_HTTP_FOUND = 302,
  DFK_HTTP_SEE_OTHER = 303,
  DFK_HTTP_NOT_MODIFIED = 304, /* RFC 7232 */
  DFK_HTTP_USE_PROXY = 305,
  DFK_HTTP_SWITCH_PROXY = 306,
  DFK_HTTP_TEMPORARY_REDIRECT = 307,
  DFK_HTTP_PERMANENT_REDIRECT = 308, /* RFC 7538 */

  DFK_HTTP_BAD_REQUEST = 400,
  DFK_HTTP_UNAUTHORIZED = 401, /* RFC 7235 */
  DFK_HTTP_PAYMENT_REQUIRED = 402,
  DFK_HTTP_FORBIDDEN = 403,
  DFK_HTTP_NOT_FOUND = 404,
  DFK_HTTP_METHOD_NOT_ALLOWED = 405,
  DFK_HTTP_NOT_ACCEPTABLE = 406,
  DFK_HTTP_PROXY_AUTHENTICATION_REQUIRED = 407, /* RFC 7235 */
  DFK_HTTP_REQUEST_TIMEOUT = 408,
  DFK_HTTP_CONFLICT = 409,
  DFK_HTTP_GONE = 410,
  DFK_HTTP_LENGTH_REQUIRED = 411,
  DFK_HTTP_PRECONDITION_FAILED = 412, /* RFC 7232 */
  DFK_HTTP_PAYLOAD_TOO_LARGE = 413, /* RFC 7231 */
  DFK_HTTP_URI_TOO_LONG = 414, /* RFC 7231 */
  DFK_HTTP_UNSUPPORTED_MEDIA_TYPE = 415,
  DFK_HTTP_RANGE_NOT_SATISFIABLE = 416, /* RFC 7233 */
  DFK_HTTP_EXPECTATION_FAILED = 417,
  DFK_HTTP_I_AM_A_TEAPOT = 418, /* RFC 2324 */
  DFK_HTTP_MISDIRECTED_REQUEST = 421, /* RFC 7540 */
  DFK_HTTP_UNPROCESSABLE_ENTITY = 422, /* WebDAV; RFC 4918 */
  DFK_HTTP_LOCKED = 423, /* WebDAV; RFC 4918 */
  DFK_HTTP_FAILED_DEPENDENCY = 424, /* WebDAV; RFC 4918 */
  DFK_HTTP_UPGRADE_REQUIRED = 426,
  DFK_HTTP_PRECONDITION_REQUIRED = 428, /* RFC 6585 */
  DFK_HTTP_TOO_MANY_REQUESTS = 429, /* RFC 6585 */
  DFK_HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE = 431, /* RFC 6585 */
  DFK_HTTP_UNAVAILABLE_FOR_LEGAL_REASONS = 451,

  DFK_HTTP_INTERNAL_SERVER_ERROR = 500,
  DFK_HTTP_NOT_IMPLEMENTED = 501,
  DFK_HTTP_BAD_GATEWAY = 502,
  DFK_HTTP_SERVICE_UNAVAILABLE = 503,
  DFK_HTTP_GATEWAY_TIMEOUT = 504,
  DFK_HTTP_HTTP_VERSION_NOT_SUPPORTED = 505,
  DFK_HTTP_VARIANT_ALSO_NEGOTIATES = 506, /* RFC 2295 */
  DFK_HTTP_INSUFFICIENT_STORAGE = 507, /* WebDAV; RFC 4918 */
  DFK_HTTP_LOOP_DETECTED = 508, /* WebDAV; RFC 5842 */
  DFK_HTTP_NOT_EXTENDED = 510, /* RFC 2774 */
  DFK_HTTP_NETWORK_AUTHENTICATION_REQUIRED = 511 /* RFC 6585 */
} dfk_http_status_e;


/**
 * @private
 */
const char* dfk_http_reason_phrase(dfk_http_status_e status);

/** @} */

