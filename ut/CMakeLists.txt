include_directories(${CMAKE_CURRENT_BINARY_DIR})
include_directories(${CMAKE_CURRENT_SOURCE_DIR})
include_directories(${CMAKE_CURRENT_BINARY_DIR}/../src/include)

set(ut_sources
  test_list.c
  test_avltree.c
  test_strtoll.c
  test_context.c
  test_error.c
  test_misc.c
  test_arena.c
  test_fiber.c
  test_mutex.c
  test_cond.c
  test_sponge.c
  #  test_strmap.c
  #  test_tcp_socket.c
  test_urlencoding.c
  #  http/test_http_constants.c
  #  test_http.c
)

#if(DFK_MOCKS)
#  list(APPEND ut_sources
#    http/test_http_request.c
#    http/test_http_response.c)
#endif()

set(ut_init_c "${CMAKE_CURRENT_BINARY_DIR}/ut_init.c")
set(ut_init_h "${CMAKE_CURRENT_BINARY_DIR}/ut_init.h")

add_executable(ut-dfk
  ${dfk_sources}
  ${ut_sources}
  ${ut_init_h}
  ${ut_init_c}
  ut.h
  ut.c
  allocators.h
  allocators.c
  #  naivetp/naivetp.h
  #  naivetp/naivetp.c
  main.c)

target_link_libraries(ut-dfk
  coro
  ${HTTP_PARSER_LIBRARIES}
  ${CURL_LIBRARIES}
  ${CMAKE_THREAD_LIBS_INIT}
)

file(WRITE ${ut_init_h}
"/*
  * @copyright
  * Copyright (c) 2015-2017, Stanislav Ivochkin. All Rights Reserved.
  *
  * @attention Generated by build system, do not edit
  */
#pragma once

void ut_register_all_test_cases(void);
\n")
file(WRITE ${ut_init_c}
"/*
  * @copyright
  * Copyright (c) 2015-2017, Stanislav Ivochkin. All Rights Reserved.
  *
  * @attention Generated by build system, do not edit
  */
#include \"ut.h\"
#include \"ut_init.h\"

void ut_register_all_test_cases(void)
{\n")

foreach(source ${ut_sources})
  file(READ "${source}" contents)
  string(REGEX MATCHALL "((DISABLED_))?TEST((_F))?\\(([A-Za-z_0-9 ,]+)\\)" found_tests ${contents})
  foreach(hit ${found_tests})
    string(REGEX REPLACE ".*\\(( *[A-Za-z_0-9]+ *,)? *([A-Za-z_0-9]+), *([A-Za-z_0-9]+) *\\).*" "\\2" test_group ${hit})
    string(REGEX REPLACE ".*\\(( *[A-Za-z_0-9]+ *,)? *([A-Za-z_0-9]+), *([A-Za-z_0-9]+) *\\).*" "\\3" test_name ${hit})
    add_test(${test_group}.${test_name} "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/ut-dfk" ${test_group} ${test_name})
    file(APPEND ${ut_init_h} "void ut_${test_group}_${test_name}(void);\n")
    file(APPEND ${ut_init_c} "  ut_register_test_case(\"${test_group}\", \"${test_name}\", ut_${test_group}_${test_name});\n")
  endforeach()
endforeach()

add_test(all_tests "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/ut-dfk")

file(APPEND ${ut_init_c} "}\n\n")
file(APPEND ${ut_init_h} "\n")

if(VALGRIND AND NOT DFK_ENABLE_COVERAGE)
  set(suppressions "${CMAKE_SOURCE_DIR}/scripts/pthread_create.supp")
  set(ut_modules
    list
    alvtree
    strtoll
    context
    strerror
    buf
    iovec
    arena
    fiber
    urlencoding)
  foreach(i ${ut_modules})
    add_test(valgrind.${i} ${VALGRIND} --error-exitcode=1 --leak-check=full --suppressions=${suppressions} "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/ut-dfk" ${i})
  endforeach()
  add_test(valgrind.all_tests ${VALGRIND} --error-exitcode=1 --leak-check=full --suppressions=${suppressions} "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/ut-dfk")
endif()
